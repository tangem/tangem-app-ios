//
//  SolanaStakeKitTransactionHelperTests.swift
//  BlockchainSdkTests
//
//  Created by [REDACTED_AUTHOR]
//  Copyright Â© 2024 Tangem AG. All rights reserved.
//

import Foundation
@testable import BlockchainSdk
import Testing

struct SolanaStakeKitTransactionHelperTests {
    private let sizeTester: TransactionSizeTesterUtility
    private let helper: SolanaStakeKitTransactionHelper

    init() {
        sizeTester = .init()
        helper = .init()
    }

    @Test
    func transaction() throws {
        let unsigned = "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000709457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15f5bb7e96e98ac7113d2dd578044070ede30bb61ed0ef4e0df49db168657880ba0000000000000000000000000000000000000000000000000000000000000000f2afc06308af48267bcade2d22a6332d9607252d1d88b9d4b9d91f7bce6ec4c506a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff400000092ba528ef980924d516fa35a49d228a8d451d89a4a149a8988ad5e15325c09f603020200017a03000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f151e00000000000000643430376563313538636638333730363034303235383962393865316464c0c62d0000000000c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc000000000040201077400000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004060103060805000402000000"

        let estimateDataToSign = "01000709457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15f5bb7e96e98ac7113d2dd578044070ede30bb61ed0ef4e0df49db168657880ba0000000000000000000000000000000000000000000000000000000000000000f2afc06308af48267bcade2d22a6332d9607252d1d88b9d4b9d91f7bce6ec4c506a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff400000092ba528ef980924d516fa35a49d228a8d451d89a4a149a8988ad5e15325c09f603020200017a03000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f151e00000000000000643430376563313538636638333730363034303235383962393865316464c0c62d0000000000c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc000000000040201077400000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004060103060805000402000000"

        let estimateDataToSend = "010202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020201000709457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15f5bb7e96e98ac7113d2dd578044070ede30bb61ed0ef4e0df49db168657880ba0000000000000000000000000000000000000000000000000000000000000000f2afc06308af48267bcade2d22a6332d9607252d1d88b9d4b9d91f7bce6ec4c506a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc00000000006a1d817a502050b680791e6ce6db88e1e5b7150f61fc6790a4eb4d10000000006a7d51718c774c928566398691d5eb68b5eb8a39b4b6d5c73555b210000000006a7d517192c5c51218cc94c3d4af17f58daee089ba1fd44e3dbd98a0000000006a7d517193584d0feed9bb3431d13206be544281b57b8566cc5375ff400000092ba528ef980924d516fa35a49d228a8d451d89a4a149a8988ad5e15325c09f603020200017a03000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f151e00000000000000643430376563313538636638333730363034303235383962393865316464c0c62d0000000000c80000000000000006a1d8179137542a983437bdfe2a7ab2557f535c8a78722b68a49dc000000000040201077400000000457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f15457e1b8faf3cc24988c7416acef1066088a46411ad5cedc30a70943e008f5f1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004060103060805000402000000"

        let dummySignature = Data(repeating: 2, count: 64)

        let dataToSign = try helper.prepareForSign(unsigned)
        #expect(dataToSign.hexString == estimateDataToSign.uppercased())

        #expect(sizeTester.isValidForCos4_52AndAbove(dataToSign))
        #expect(!sizeTester.isValidForiPhone7(dataToSign))
        #expect(!sizeTester.isValidForCosBelow4_52(dataToSign))

        let dataToSend = try helper.prepareForSend(unsigned, signature: dummySignature)
        #expect(dataToSend == Data(hexString: estimateDataToSend).base64EncodedString())
    }
}
