//
//  NEARAddressTests.swift
//  TangemApp
//
//  Created by [REDACTED_AUTHOR]
//  Copyright Â© 2025 Tangem AG. All rights reserved.
//

import BitcoinCore
import CryptoKit
@testable import BlockchainSdk
import Testing

struct NEARAddressTests {
    @Test(arguments: [Blockchain.near(curve: .ed25519, testnet: false), .near(curve: .ed25519_slip0010, testnet: false)])
    func addressGeneration(blockchain: Blockchain) throws {
        let addressServiceFactory = AddressServiceFactory(blockchain: blockchain)
        let addressService = addressServiceFactory.makeAddressService()

        // Generated by Trust Wallet / official NEAR web wallet (https://wallet.near.org/) / Wallet 2.0
        // for the "tiny escape drive pupil flavor endless love walk gadget match filter luxury" mnemonic
        let expectedAddress = "b5cf12d432ee87dbc664e2700eeef72b3e814879b978bb9491e5796a63e85ee4"

        // Private key for the "tiny escape drive pupil flavor endless love walk gadget match filter luxury" mnemonic
        let privateKey = "4z9uzXnZHE6huxMbnV7egjpvQk6ov7eji3FM12buV8DDtkARhiDqiCoDxSa3VpBMKYzzjmJcVXXyw8qhYgTs6MfH"
            .base58DecodedData[0 ..< 32]

        let publicKey = try Curve25519.Signing.PrivateKey(rawRepresentation: privateKey)
            .publicKey
            .rawRepresentation

        #expect(throws: Never.self) {
            try addressService.makeAddress(from: publicKey)
        }

        #expect(throws: (any Error).self) {
            try addressService.makeAddress(from: Keys.AddressesKeys.secpCompressedKey)
        }
        #expect(throws: (any Error).self) {
            try addressService.makeAddress(from: Keys.AddressesKeys.secpDecompressedKey)
        }

        let address = try addressService.makeAddress(from: publicKey)

        #expect(AddressType.default.defaultLocalizedName == address.localizedName)
        #expect(expectedAddress == address.value)
    }

    @Test(arguments: [Blockchain.near(curve: .ed25519, testnet: false), .near(curve: .ed25519_slip0010, testnet: false)])
    func addressValidation(blockchain: Blockchain) throws {
        let addressServiceFactory = AddressServiceFactory(blockchain: blockchain)
        let addressService = addressServiceFactory.makeAddressService()

        #expect(addressService.validate("f69cd39f654845e2059899a888681187f2cda95f29256329aea1700f50f8ae86"))
        #expect(addressService.validate("75149e81ac9ea0bcb6f00faee922f71a11271f6cbc55bac97753603504d7bf27"))
        #expect(addressService.validate("64acf5e86c840024032d7e75ec569a4d304443e250b197d5a0246d2d49afc8e1"))
        #expect(addressService.validate("84a3fe2fc0e585d802cfa160807d1bf8ca5f949cf8d04d128bf984c50aabab7b"))
        #expect(addressService.validate("d85d322043d87cc475d3523d6fb0c3df903d3830e5d4d5027ffe565e7b8652bb"))
        #expect(addressService.validate("f69cd39f654845e2059899a88868.1187f2cda95f29256329aea1700f50f8ae8"))
        #expect(addressService.validate("something.near"))
        #expect(addressService.validate("6f8a1e9b0c2d3f4a5b7e8d9a1c32ed5f67b8cd0e1f23b4c5d6e7f88023a"))
        #expect(addressService.validate("ctiud11caxsb2tw7dmfcrhfw9ah15ltkydrjfblst32986pekmb3dsvyrmyym6qn"))
        #expect(addressService.validate("ok"))
        #expect(addressService.validate("bowen"))
        #expect(addressService.validate("ek-2"))
        #expect(addressService.validate("ek.near"))
        #expect(addressService.validate("com"))
        #expect(addressService.validate("google.com"))
        #expect(addressService.validate("bowen.google.com"))
        #expect(addressService.validate("near"))
        #expect(addressService.validate("illia.cheap-accounts.near"))
        #expect(addressService.validate("max_99.near"))
        #expect(addressService.validate("100"))
        #expect(addressService.validate("near2019"))
        #expect(addressService.validate("over.9000"))
        #expect(addressService.validate("a.bro"))
        #expect(addressService.validate("bro.a"))

        #expect(!addressService.validate(""))
        #expect(!addressService.validate("9a4b6c1e2d8f3a5b7e8d9a1c3b2e4d5f6a7b8c9d0e1f2a3b4c5d6e7f8a4b6c1e2d8f3"))
        #expect(!addressService.validate("not ok"))
        #expect(!addressService.validate("a"))
        #expect(!addressService.validate("100-"))
        #expect(!addressService.validate("bo__wen"))
        #expect(!addressService.validate("_illia"))
        #expect(!addressService.validate(".near"))
        #expect(!addressService.validate("near."))
        #expect(!addressService.validate("a..near"))
        #expect(!addressService.validate("$$$"))
        #expect(!addressService.validate("WAT"))
        #expect(!addressService.validate("me@google.com"))
        #expect(!addressService.validate("system"))
        #expect(!addressService.validate("abcdefghijklmnopqrstuvwxyz.abcdefghijklmnopqrstuvwxyz.abcdefghijklmnopqrstuvwxyz"))
        #expect(!addressService.validate(""))
        #expect(!addressService.validate("9a4b6c1e2d8f3a5b7e8d9a1c3b2e4d5f6a7b8c9d0e1f2a3b4c5d6e7f8a4b6c1e2d8f3"))
    }
}
